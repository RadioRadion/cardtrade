<h1>Pages#home</h1>
<p>Find me in app/views/pages/home.html.erb</p>

<label for="name">Name (4 to 8 characters):</label>

<input type="text" id="name" name="name" required
       minlength="4" maxlength="8" size="10">

<!-- code pour chopper toutes les cartes au dÃ©marrage -->
<% require 'csv'
cards = []
filepath = 'lib/datas/cards.csv' %>

<% CSV.foreach(filepath) do |row|
  # Here, row is an array of columns
  cards << row[46]
end
p cards[1]
  %>




      <div class="container">
      <div class="row">
        <div class="col-g-12">AA</div>
      </div>
      <div class="row">
        <div class="col-g-x1">AA</div>
        <div class="col-g-x2">AA</div>
        <div class="col-g-x3">AA</div>
      </div>
      <div class="row">
        ...
      </div>
     </div>



  <form class="search-form">
    <input type="text" class="search" placeholder="City or State">
    <ul class="suggestions">
      <li>Filter for a city</li>
      <li>or a state</li>
    </ul>
  </form>

<script>
 const cards = <%= raw cards %>;
// const cities = [];
// fetch(endpoint)
//   .then(blob => blob.json())
//   .then(data => cities.push(...data));

function findMatches(wordToMatch, cards) {
  return cards.filter(card => {
    // here we need to figure out if the city or state matches what was searched
    const regex = new RegExp(wordToMatch, 'gi');
    return card.match(regex);
  });
}

// function numberWithCommas(x) {
//   return x.toString().recard(/\B(?=(\d{3})+(?!\d))/g, ',');
// }

function displayMatches() {
  const matchArray = findMatches(this.value, cards);
  const html = matchArray.map(card => {
    const regex = new RegExp(this.value, 'gi');
    const Name = card.replace(regex, `<span class="hl">${this.value}</span>`);
    return `
      <li>
        <span class="name">${Name}</span>
      </li>
    `;
  }).join('');
  suggestions.innerHTML = html;
}

const searchInput = document.querySelector('.search');
const suggestions = document.querySelector('.suggestions');

searchInput.addEventListener('change', displayMatches);
searchInput.addEventListener('keyup', displayMatches);

</script>

<!-- <script>
const endpoint = 'https://gist.githubusercontent.com/Miserlou/c5cd8364bf9b2420bb29/raw/2bf258763cdddd704f8ffd3ea9a3e81d25e2c6f6/cities.json';

const cities = [];
fetch(endpoint)
  .then(blob => blob.json())
  .then(data => cities.push(...data));

function findMatches(wordToMatch, cities) {
  return cities.filter(place => {
    // here we need to figure out if the city or state matches what was searched
    const regex = new RegExp(wordToMatch, 'gi');
    return place.city.match(regex) || place.state.match(regex)
  });
}

function numberWithCommas(x) {
  return x.toString().replace(/\B(?=(\d{3})+(?!\d))/g, ',');
}

function displayMatches() {
  const matchArray = findMatches(this.value, cities);
  const html = matchArray.map(place => {
    const regex = new RegExp(this.value, 'gi');
    const cityName = place.city.replace(regex, `<span class="hl">${this.value}</span>`);
    const stateName = place.state.replace(regex, `<span class="hl">${this.value}</span>`);
    return `
      <li>
        <span class="name">${cityName}, ${stateName}</span>
        <span class="population">${numberWithCommas(place.population)}</span>
      </li>
    `;
  }).join('');
  suggestions.innerHTML = html;
}

const searchInput = document.querySelector('.search');
const suggestions = document.querySelector('.suggestions');

searchInput.addEventListener('change', displayMatches);
searchInput.addEventListener('keyup', displayMatches);

</script>

 -->
