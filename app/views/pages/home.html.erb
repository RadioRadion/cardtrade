<h1>Pages#home</h1>
<p>Find me in app/views/pages/home.html.erb</p>

<label for="name">Name (4 to 8 characters):</label>

<input type="text" id="name" name="name" required
       minlength="4" maxlength="8" size="10">

<!-- code pour chopper toutes les cartes au démarrage -->
<% require 'csv'
cards = []
filepath = 'lib/datas/cards.csv'
CSV.foreach(filepath) do |row|
  # Here, row is an array of columns
  cards << row[46]
end
  uniqs = cards.uniq.sort
  %>

      <div class="container">
      <div class="row">
        <div class="col-g-12">AA</div>
      </div>
      <div class="row">
        <div class="col-g-x1">AA</div>
        <div class="col-g-x2">AA</div>
        <div class="col-g-x3">AA</div>
      </div>
      <div class="row">
        ...
      </div>
     </div>



  <form class="search-form">
    <input type="text" class="search" placeholder="City or State">
    <ul class="suggestions">
      <li>Filter for a city</li>
      <li>or a state</li>
    </ul>
  </form>

<script>
  //Importation de la variable de ruby. raw permet d'éviter le soucis d'importation qui rajoute &quote à chaque entrée de l'array
 const uniqs = <%= raw uniqs %>;
// const cities = [];
// fetch(endpoint)
//   .then(blob => blob.json())
//   .then(data => cities.push(...data));

function findMatches(wordToMatch, uniqs) {
  return uniqs.filter(card => {
    const regex = new RegExp(wordToMatch, 'gi');
    return card.match(regex);
  });
}

function complete(name) {
  document.querySelector('.search').value = name;
  suggestions.innerHTML = "";
}

function displayMatches() {
  if (this.value.length > 1) {
    const matchArray = findMatches(this.value, uniqs);
    const html = matchArray.map(card => {
      // const regex = new RegExp(this.value, 'gi');
      // const Name = card.replace(regex, `<span class="hl" >${this.value}</span>`);
      return `
        <li>
          <span class="name" onclick="complete('${card}')" >${card}</span>
        </li>
      `;
    }).join('');
    suggestions.innerHTML = html;
  }
}

const searchInput = document.querySelector('.search');
const suggestions = document.querySelector('.suggestions');


searchInput.addEventListener('change', displayMatches);
searchInput.addEventListener('keyup', displayMatches);


</script>

